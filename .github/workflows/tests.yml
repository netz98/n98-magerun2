name: Tests
on:
  push:
    branches:
      - 'master'
      - 'develop'
      - 'bugfix/*'
      - 'feature/*'
      - 'release/*'
  pull_request_target:
    branches:
      - 'master'
      - 'develop'

jobs:
  phpunit:
    name: Unit Tests
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        include:
          - magento-version: magento-ce-2.4.3-p1
            operating-system: ubuntu-latest
            php-version: 7.4
            mysql-version: 8.0
            elsticsearch-version: 7.9.0
            composer-version: v2

          - magento-version: magento-ce-2.4.2-p1
            operating-system: ubuntu-latest
            php-version: 7.4
            mysql-version: 8.0
            elsticsearch-version: 7.9.0
            composer-version: v2

          - magento-version: magento-ce-2.4.2
            operating-system: ubuntu-latest
            php-version: 7.4
            mysql-version: 8.0
            elsticsearch-version: 7.9.0
            composer-version: v2

          - magento-version: magento-ce-2.4.1
            operating-system: ubuntu-latest
            php-version: 7.4
            mysql-version: 8.0
            elsticsearch-version: 7.7.0
            composer-version: v1

          - magento-version: magento-ce-2.4.0
            operating-system: ubuntu-latest
            php-version: 7.3
            mysql-version: 5.7
            elsticsearch-version: 7.6.0
            composer-version: v1

          - magento-version: magento-ce-2.3.5-p2
            operating-system: ubuntu-latest
            php-version: 7.3
            mysql-version: 5.7
            elsticsearch-version: 7.6.0
            composer-version: v1
          
          - magento-version: magento-ce-2.3.4
            operating-system: ubuntu-latest
            php-version: 7.3
            mysql-version: 5.7
            elsticsearch-version: 7.6.0
            composer-version: v1
          
    services:
      elaticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:${{ matrix.elsticsearch-version }}
        ports:
          - 9200:9200
          - 9300:9300
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10
        
      mysql:
        image: mysql:${{ matrix.mysql-version }}
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        options: --tmpfs /tmp:rw --tmpfs /var/lib/mysql:rw --health-cmd="mysqladmin ping"
    env:
      MAGENTO_MARKETPLACE_USERNAME: ${{ secrets.MAGENTO_MARKETPLACE_USERNAME }}
      MAGENTO_MARKETPLACE_PASSWORD: ${{ secrets.MAGENTO_MARKETPLACE_PASSWORD }}
      COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      # https://github.com/marketplace/actions/setup-php-action#matrix-setup
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          tools: composer:${{ matrix.composer-version }}, cs2pr
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl
          coverage: none

      - name: Install Composer Presissimo Plugin
        run: composer global require hirak/prestissimo
        if: matrix.composer-version == 'v1'

      - name: Install dependencies
        run: composer --ansi install

      - name: Run php-cs-fixer
        run: vendor/bin/php-cs-fixer fix --dry-run --format=checkstyle | cs2pr

      - name: Install Magento ${{ matrix.magento-version }}
        run: |
          composer global config http-basic.repo.magento.com "${MAGENTO_MARKETPLACE_USERNAME}" "${MAGENTO_MARKETPLACE_PASSWORD}";
          bin/n98-magerun2 --ansi install \
          --magentoVersionByName="${{ matrix.magento-version }}" --installationFolder="./magento" \
          --dbHost=127.0.0.1 --dbPort=${{ job.services.mysql.ports['3306'] }} --dbUser=root --dbPass=root --dbName="magento" \
          --useDefaultConfigParams=yes \
          --baseUrl="http://gitbub.magerun.test/";

      - name: Configure matchers
        uses: mheap/phpunit-matcher-action@master

      - name: Run PHPUnit (Developer Mode)
        run: vendor/bin/phpunit --process-isolation --teamcity

      - name: Activate Magento Production Mode
        working-directory: ./magento
        run: bin/magento deploy:mode:set --skip-compilation production

      - name: Run PHPUnit (Production Mode)
        run: vendor/bin/phpunit --process-isolation --teamcity
