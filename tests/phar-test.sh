#!/bin/bash

# Debugging
# set -x;

ADDITIONAL_OPTIONS="";
PHAR_FILE=$1;
MAGENTO_ROOT_DIR=$2;

function verify() {
	if [ -z "$PHAR_FILE" ]; then
		echo "usage: $0 <phar-file> <magento-root-dir>";
		exit 1;
	fi

	if [ -z "$MAGENTO_ROOT_DIR" ]; then
		echo "usage: $0 <phar-file> <magento-root-dir>";
  	exit 1;
  fi
}

function assert_command_contains {
	local command=$1;
	local find=$2;

	echo -n "$command"

	$PHAR_FILE --root-dir="$N98_MAGERUN2_TEST_MAGENTO_ROOT" $command $ADDITIONAL_OPTIONS | grep "$find" > /dev/null;

	if [ $? -eq 0 ]; then
		echo -e "\t\tok";
	else
		echo -e "\t\tfailure";
	fi;
}

function test_magerun_commands() {
	# List of commands was generated by
	# $> ./n98-magerun2.phar --skip-core-commands list --format json | jq -r '.commands[] | .name'
	ADDITIONAL_OPTIONS="--skip-core-commands";

	#  open-browser
	#  script
	#  self-update
	#  shell
	#  admin:notifications
	#  admin:token:create
	#  admin:user:change-password
	#  admin:user:change-status
	#  admin:user:delete
	#  admin:user:list
	#  cache:clean
	#  cache:disable
	#  cache:enable
	#  cache:flush
	#  cache:list
	#  cache:report
	#  cache:view
	#  cms:block:toggle
	#  config:data:acl
	#  config:data:di
	#  config:env:create
	#  config:env:delete
	#  config:env:set
	#  config:env:show
	#  config:store:delete
	#  config:store:get
	#  config:store:set
	#  customer:change-password
	#  customer:create
	#  customer:info
	#  customer:list
	#  customer:token:create
	#  db:add-default-authorization-entries
	#  db:console
	#  db:create
	#  db:drop
	#  db:dump
	#  db:import
	#  db:info
	#  db:maintain:check-tables
	#  db:query
	#  db:status
	#  db:variables
	#  design:demo-notice
	#  dev:asset:clear
	#  dev:console
	#  dev:module:create
	#  dev:module:list
	#  dev:module:observer:list
	#  dev:report:count
	#  dev:symlinks
	#  dev:template-hints
	#  dev:template-hints-blocks
	#  dev:theme:list
	#  eav:attribute:list
	#  eav:attribute:remove
	#  eav:attribute:view
	#  generation:flush
	#  index:list
	#  index:trigger:recreate
	#  integration:create
	#  integration:delete
	#  integration:list
	#  integration:show
	#  media:dump
	#  script:repo:list
	#  script:repo:run
	#  search:engine:list
	#  sys:check
	#  sys:cron:history
	#  sys:cron:list
	#  sys:cron:run
	#  sys:cron:schedule
	#  sys:info
	assert_command_contains "sys:info" "Magento System Information"
	#  sys:maintenance
	#  sys:setup:change-version
	#  sys:setup:compare-versions
	#  sys:setup:downgrade-versions
	#  sys:store:config:base-url:list
	#  sys:store:list
	#  sys:url:list
	#  sys:website:list

}

function test_magento_core_commands() {
	# List of commands are generated by
	# $> bin/magento list --format json | jq -r '.commands[] | .name'
	ADDITIONAL_OPTIONS="";

	#  admin:user:create
	#  admin:user:unlock
	#  app:config:dump
	#  app:config:import
	#  app:config:status
	#  cache:clean
	#  cache:disable
	#  cache:enable
	#  cache:flush
	assert_command_contains "cache:flush" "config cache flushed"
	#  cache:status
	assert_command_contains "cache:status" "Current status"
	#  catalog:images:resize
	#  catalog:product:attributes:cleanup
	#  cms:wysiwyg:restrict
	#  config:sensitive:set
	#  config:set
	#  config:show
	assert_command_contains "config:show" "catalog/category/root_id"
	assert_command_contains "config:show --scope=default catalog/category/root_id" "2"
	#  cron:install (cannot be tested without crontab)
	#  cron:remove
	#  cron:run
	#  customer:hash:upgrade
	#  deploy:mode:set
	#  deploy:mode:show
	#  dev:di:info
	#  dev:profiler:disable
	#  dev:profiler:enable
	#  dev:query-log:disable
	#  dev:query-log:enable
	#  dev:source-theme:deploy
	#  dev:template-hints:disable
	#  dev:template-hints:enable
	#  dev:tests:run
	#  dev:urn-catalog:generate
	#  dev:xml:convert
	#  dotdigital:connector:automap
	#  dotdigital:connector:enable
	#  dotdigital:migrate
	#  dotdigital:sync
	#  downloadable:domains:add
	#  downloadable:domains:remove
	#  downloadable:domains:show
	#  encryption:payment-data:update
	#  help
	#  i18n:collect-phrases
	#  i18n:pack
	#  i18n:uninstall
	#  indexer:info
	assert_command_contains "indexer:info" "catalog_category_product"
	#  indexer:reindex
	assert_command_contains "indexer:reindex" "Catalog Search index has been rebuilt successfully"
	#  indexer:reset
	assert_command_contains "indexer:reset" "Catalog Search indexer has been invalidated."
	#  indexer:set-dimensions-mode
	#  indexer:set-mode
	#  indexer:show-dimensions-mode
	#  indexer:show-mode
	assert_command_contains "indexer:show-mode" "Catalog Search"
	#  indexer:status
	assert_command_contains "indexer:status" "Update On"
	#  info:adminuri
	assert_command_contains "info:adminuri" "Admin URI:"
	#  info:backups:list
	assert_command_contains "info:backup:list" "No backup files found."
	#  info:currency:list
	assert_command_contains "info:currency:list" "S Dollar (USD)"
	#  info:dependencies:show-framework
	#  info:dependencies:show-modules
	#  info:dependencies:show-modules-circular
	#  info:language:list
	assert_command_contains "info:language:list" "German (Germany)"
	#  info:timezone:list
	assert_command_contains "info:timezone:list" "Europe/Berlin"
	#  inventory-geonames:import
	#  inventory:reservation:create-compensations
	#  inventory:reservation:list-inconsistencies
	#  list (covered by n98-magerun list command)
	#  maintenance:allow-ips
	#  maintenance:disable
	#  maintenance:enable
	#  maintenance:status
	#  module:config:status
	#  module:disable
	#  module:enable
	#  module:status
	#  module:uninstall
	#  msp:security:recaptcha:disable
	#  msp:security:tfa:disable
	#  msp:security:tfa:providers
	#  msp:security:tfa:reset
	#  newrelic:create:deploy-marker
	#  queue:consumers:list
	#  queue:consumers:start
	#  sampledata:deploy
	#  sampledata:remove
	#  sampledata:reset
	#  setup:backup
	#  setup:config:set
	#  setup:db-data:upgrade
	#  setup:db-declaration:generate-patch
	#  setup:db-declaration:generate-whitelist
	#  setup:db-schema:upgrade
	#  setup:db:status
	assert_command_contains "setup:db:status" "All modules are up to date."
	#  setup:di:compile
	#  setup:install
	#  setup:performance:generate-fixtures
	#  setup:rollback
	#  setup:static-content:deploy
	#  setup:store-config:set
	#  setup:uninstall
	#  setup:upgrade
	#  store:list
	#  store:website:list
	#  theme:uninstall
	#  varnish:vcl:generate
	#  vertex:tax:warm-wsdl-cache
	#  yotpo:reset
	#  yotpo:sync
	#  yotpo:update-metadata

}

verify;
test_magerun_commands;
test_magento_core_commands;
